@model List<E_commerceWebsite.Data.CartItem>
@{
    Layout = "~/Views/Shared/CustomerLayout.cshtml";
}

<h2>Checkout</h2>

<table class="table">
    <thead>
        <tr>
            <th>Product</th>
            <th>Quantity</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.ProductName</td>
                <td>@item.Quantity</td>
                <td>₦@item.TotalPrice.ToString("N2")</td>
            </tr>
        }
    </tbody>
</table>

<div class="form-group">
    <label for="pickupOrDelivery">Choose Delivery Option</label>
    <select class="form-control" id="pickupOrDelivery" name="pickupOrDelivery" required>
        <option value="">Select Delivery Option</option>
        <option value="pickup">Pickup</option>
        <option value="delivery">Delivery (₦4000)</option>
    </select>
</div>

<h3 id="totalDisplay">Total: ₦@Model.Sum(item => item.TotalPrice).ToString("N2")</h3>

<button class="btn btn-success" id="placeOrderButton">Place Order</button>

<div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Customer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="customerForm">
                    <div class="mb-3">
                        <label for="name">Name</label>
                        <input type="text" id="name" name="name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="email">Email</label>
                        <input type="email" id="email" name="email" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="shippingAddress">Shipping Address</label>
                        <textarea id="shippingAddress" name="shippingAddress" class="form-control" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="submitOrderButton">Submit Order</button>
            </div>
        </div>
    </div>
</div>

<script>
    const deliveryCharge = 4000;
    const baseTotal = @Model.Sum(item => item.TotalPrice);

    document.getElementById('pickupOrDelivery').addEventListener('change', function () {
        const totalDisplay = document.getElementById('totalDisplay');
        const total = this.value === 'delivery' ? baseTotal + deliveryCharge : baseTotal;
        totalDisplay.textContent = `Total: ₦${total.toLocaleString('en-NG', { minimumFractionDigits: 2 })}`;
    });

    document.getElementById('placeOrderButton').addEventListener('click', function () {
        if (!document.getElementById('pickupOrDelivery').value) {
            alert('Please select a delivery option.');
            return;
        }
        new bootstrap.Modal(document.getElementById('checkoutModal')).show();
    });

    document.getElementById('submitOrderButton').addEventListener('click', function () {
        const form = new FormData(document.getElementById('customerForm'));
        form.append('pickupOrDelivery', document.getElementById('pickupOrDelivery').value);

        fetch('@Url.Action("PlaceOrder", "Cart")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(Object.fromEntries(form.entries()))
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success', data.message, 'success').then(() => {
                        window.location.href = `@Url.Action("OrderConfirmation", "Order")?orderId=${data.orderId}`;
                    });
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            })
            .catch(() => Swal.fire('Error', 'Something went wrong.', 'error'));
    });
</script>
