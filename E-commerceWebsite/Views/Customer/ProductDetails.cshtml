@model E_commerceWebsite.ViewModels.ProductViewModel
@{
    Layout = "~/Views/Shared/CustomerLayout.cshtml";
}

<link rel="stylesheet" href="@Url.Content("~/css/site.css")" asp-append-version="true" />

<div class="product-detail-page">
    <div class="product-gallery">
        <img src="@Model.ImageUrl" alt="@Model.Name" />
    </div>

    <div class="product-info">
        <h2>@Model.Name</h2>
        <p class="price">
            ₦ @Model.DiscountedPrice.ToString()
            @if (Model.DiscountedPrice < Model.Price)
            {
                <span class="original-price">₦ @Model.Price.ToString()</span>
            }
        </p>

        <p>@Model.Description</p>

        <div class="color-selector">
            <h5>Select Color:</h5>
            @foreach (var color in Model.Colors)
            {
                <button class="color-option" style="background-color: @color; border: 2px solid transparent;" data-color="@color"></button>
            }
        </div>

        <div class="size-selector">
            <h5>Choose Size:</h5>
            @foreach (var size in Model.Sizes)
            {
                <button class="size-option" data-size="@size">@size</button>
            }
        </div>

        <div class="quantity-selector">
            <h5>Quantity:</h5>
            <input type="number" id="quantity" min="0" value="0" />
        </div>

        <form method="post" asp-controller="Cart" asp-action="AddToCart" id="addToCartForm" class="mt-5">
            <input type="hidden" name="productId" value="@Model.Id" />
            <input type="hidden" name="selectedColor" id="selectedColor" />
            <input type="hidden" name="selectedSize" id="selectedSize" />
            <input type="hidden" name="quantity" id="quantityValue" />

            <button type="submit" class="add-to-cart btn btn-primary">Add to Cart</button>
        </form>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.all.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const colorOptions = document.querySelectorAll('.color-option');
        const sizeOptions = document.querySelectorAll('.size-option');

        colorOptions.forEach(button => {
            button.addEventListener('click', () => {
                colorOptions.forEach(btn => btn.style.border = '2px solid transparent');
                button.style.border = '4px solid blue';
                document.getElementById('selectedColor').value = button.dataset.color;
            });
        });

        sizeOptions.forEach(button => {
            button.addEventListener('click', () => {
                sizeOptions.forEach(btn => btn.style.backgroundColor = '');
                button.style.backgroundColor = 'blue';
                button.style.color = 'white';
                document.getElementById('selectedSize').value = button.dataset.size;
            });
        });

        document.getElementById('quantity').addEventListener('change', (e) => {
            document.getElementById('quantityValue').value = e.target.value;
        });

        document.getElementById('addToCartForm').addEventListener('submit', function (event) {
            const selectedColor = document.getElementById('selectedColor').value;
            const selectedSize = document.getElementById('selectedSize').value;
            const quantity = document.getElementById('quantityValue').value;

            if (!selectedColor || !selectedSize || quantity < 1) {
                event.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please select a color, size, and quantity before adding to cart.',
                    confirmButtonText: 'OK'
                });
            }
        });
        document.getElementById('addToCartForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(this);

            fetch(this.action, {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            text: data.message,
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: data.message,
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                        confirmButtonText: 'OK'
                    });
                });
        });
    });
</script>
