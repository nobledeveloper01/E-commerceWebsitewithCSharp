@{
    ViewData["Title"] = "Contact Us";
}

<!-- Contact Form Section -->
<section class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="p-5 shadow rounded" style="background: #fff;">
                <h2 class="text-center fw-bold text-primary mb-4">Get In Touch</h2>
                <p class="text-muted text-center">If you have any questions or need assistance, please reach out to us. We are here to help!</p>

                <div id="contactMessage" class="alert" style="display: none;"></div>

                <form id="contactForm">
                    @Html.AntiForgeryToken() <!-- Include Anti-forgery token -->
                    <div class="mb-3">
                        <label class="form-label fw-bold">Your Name</label>
                        <input id="contactName" class="form-control" placeholder="Enter your name" required />
                        <span id="contactNameError" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Email</label>
                        <input id="contactEmail" class="form-control" placeholder="Enter your email" required />
                        <span id="contactEmailError" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Message</label>
                        <textarea id="contactMessageInput" class="form-control" rows="5" placeholder="Your message" required></textarea>
                        <span id="contactMessageError" class="text-danger"></span>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary px-4 py-2">Send Message</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Complaint Form Section -->
<section class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="p-5 shadow rounded" style="background: #fff;">
                <h2 class="text-center fw-bold text-primary mb-4">File a Complaint</h2>
                <p class="text-muted text-center">If you have any complaints, please let us know and we will address them promptly.</p>

                <div id="complaintMessage" class="alert" style="display: none;"></div>

                <form id="complaintForm">
                    @Html.AntiForgeryToken() <!-- Include Anti-forgery token -->
                    <div class="mb-3">
                        <label class="form-label fw-bold">Your Name</label>
                        <input id="complaintName" class="form-control" placeholder="Enter your name" required />
                        <span id="complaintNameError" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Email</label>
                        <input id="complaintEmail" class="form-control" placeholder="Enter your email" required />
                        <span id="complaintEmailError" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Complaint Details</label>
                        <textarea id="complaintDescription" class="form-control" rows="5" placeholder="Describe your complaint" required></textarea>
                        <span id="complaintDescriptionError" class="text-danger"></span>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-danger px-4 py-2">Submit Complaint</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        function handleFormSubmit(formId, apiEndpoint, successMessage, errorMessage) {
            document.getElementById(formId).addEventListener('submit', function (event) {
                event.preventDefault();

                const name = document.getElementById(formId === 'contactForm' ? 'contactName' : 'complaintName').value;
                const email = document.getElementById(formId === 'contactForm' ? 'contactEmail' : 'complaintEmail').value;
                const message = document.getElementById(formId === 'contactForm' ? 'contactMessageInput' : 'complaintDescription').value;

                if (!name || !email || !message) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops!',
                        text: 'All fields are required!',
                    });
                    return;
                }

                const formData = new FormData();
                formData.append('Name', name);
                formData.append('Email', email);
            
                if (formId === 'contactForm') {
                    formData.append('Message', message);
                } else {
                    formData.append('complaintDescription', message);
                }

                fetch(apiEndpoint, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]').value
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: successMessage,
                                timer: 3000
                            });
                            document.getElementById(formId).reset();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: errorMessage
                            });
                        }
                    })
                    .catch(() => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'There was an error with the request.'
                        });
                    });
            });
        }

        handleFormSubmit('contactForm', '/Home/SubmitContact', 'Your message has been sent successfully!', 'There was an issue sending your message.');
        handleFormSubmit('complaintForm', '/Home/SubmitComplaint', 'Your complaint has been submitted successfully!', 'There was an issue submitting your complaint.');
    });

</script>
